#!/bin/bash

set -e

. /usr/share/debconf/confmodule
db_version 2.0

db_capb backup

dbSet()
{
	if ! db_get "$1"; then
		db_register debian-installer/dummy "$1"
		db_subst "$1" ID "$1"
	fi
	db_set "$1" "$2"
}

popState()
{
	if [ -n "$STATES" ]; then
		STATE=${STATES##* }
		STATES=${STATES% *}
	else
		STATE=""
	fi
}

pushState()
{
	STATES="$STATES $1"
}

STATE=1
while [ -n "$STATE" -a "$STATE" != 34 ]; do
	NEXT_STATE=$((STATE + 1))
	case "$STATE" in
	    1)
		db_input high cloud-installer/install-type || true
		;;
	    2)
		db_get cloud-installer/install-type
		case "$RET" in
		    Multi-system)
			install_type=multi
			NEXT_STATE=10
			;;
		    "Single system")
			install_type=single
			NEXT_STATE=30
			;;
		    "Landscape managed")
			install_type=landscape
			NEXT_STATE=10
			;;

		esac
		;;
	    10)
		db_input high cloud-installer/manage-dhcp || true
		;;
	    11)
		db_get cloud-installer/manage-dhcp
		if [ "$RET" = true ]; then
		    manage_dhcp=true
		    NEXT_STATE=15
		else
		    manage_dhcp=""
		fi
		;;
	    12)
		db_input high cloud-installer/manual-dhcp || true
		NEXT_STATE=30
		;;
	    15)
		db_input high cloud-installer/dhcp-range || true
		NEXT_STATE=30
		;;
	    30)
		db_input high cloud-installer/openstack-admin-password || true
		db_input high cloud-installer/openstack-admin-password-again || true
		;;
	    31)
		# Validate openstack password match
		db_get cloud-installer/openstack-admin-password
		ADMIN_PW="$RET"
		db_get cloud-installer/openstack-admin-password-again
		if [ "$ADMIN_PW" != "$RET" ]; then
		    db_input critical cloud-installer/password-mismatch
		    NEXT_STATE=30
		fi
		;;

	    32)
		db_input high cloud-installer/openstack-vmnetwork || true
		;;
	    33)
		db_get cloud-installer/openstack-vmnetwork
		;;
	esac

	if db_go; then
	    pushState "$STATE"
	    STATE=$NEXT_STATE
	else
	    popState
	fi
done
if [ -z "$STATE" ]; then
	exit 0
fi

db_get cloud-installer/openstack-admin-password
late_command="printf \"%s\n\" \"$RET\" > /target/etc/openstack.passwd; chmod 0600 /target/etc/openstack.passwd"

dbSet tasksel/first "standard, server"; db_fset tasksel/first seen true

packages="cloud-installer"
case $install_type in
multi)
	packages="$packages cloud-install-multi"
	;;
single)
	packages="$packages cloud-install-single"
	;;
landscape)
	;;
esac
dbSet pkgsel/include "$packages"
dbSet maas/installation-note ""; db_fset maas/installation-note seen true

db_get preseed/late_command
if [ -n "$RET" ]; then
	late_command="$late_command; $RET"
fi
dbSet preseed/late_command "$late_command"
