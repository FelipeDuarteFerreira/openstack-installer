#!/bin/bash
# postinst for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule
db_version 2.0

db_capb backup

popState()
{
	if [ -n "$STATES" ]; then
		STATE=${STATES##* }
		STATES=${STATES% *}
	else
		STATE=""
	fi
}

pushState()
{
	STATES="$STATES $1"
}

getInterfaces()
{
	ifconfig -s|egrep -v 'Iface|lo'|egrep -o '^[a-zA-Z0-9]+'|paste -sd ','| sed -s 's/,/, /g'
}

getBridgeOptions()
{
  db_get cloud-install/install-interface
  INSTALL_IF="$RET"
  getInterfaces | sed -e "s/$INSTALL_IF, //g"
}

STATE=1
case "$1" in
	configure)
	    while [ -n "$STATE" -a "$STATE" != 34 ]; do
		NEXT_STATE=$((STATE + 1))
		case "$STATE" in
		    1)
			db_subst cloud-install/install-interface CHOICES "$(getInterfaces)"
			db_input high cloud-install/install-interface || true
			NEXT_STATE=2
			;;
		    2)
			db_input high cloud-install/dhcp-range || true
			NEXT_STATE=3
			;;
		    3)
			db_subst cloud-install/bridge-interface BRIDGE_OPTIONS "$(getBridgeOptions)"
			db_input high cloud-install/bridge-interface || true
			NEXT_STATE=4
			;;
		    4)
			db_input high cloud-install/openstack-admin-password || true
			db_input high cloud-install/openstack-admin-password-again || true
			NEXT_STATE=5
			;;
		    5)
			# Validate openstack password match
			db_get cloud-install/openstack-admin-password
			ADMIN_PW="$RET"
			db_get cloud-install/openstack-admin-password-again
			if [ "$ADMIN_PW" != "$RET" ]; then
			    db_input critical cloud-install/password-mismatch
			    NEXT_STATE=4
			fi
			;;
		esac

		if db_go; then
		    pushState "$STATE"
		    STATE=$NEXT_STATE
		else
		    popState
		fi
	    done

	    if [ -z "$STATE" ]; then
		exit 0
	    fi

	    # Store openstack credentials
	    db_get cloud-install/openstack-admin-password
	    printf "%s\n" "$RET" > /etc/openstack.passwd; chmod 0600 /etc/openstack.passwd
	    db_set maas/installation-note ""; db_fset maas/installation-note seen true
	    db_set cloud-install/install-type "Multi-system"
	    # Set our install user
	    db_set cloud-install/install-user $(getent passwd 1000|cut -d: -f1)
	    ;;
	abort-upgrade|abort-remove|abort-deconfigure)
	    ;;
	*)
	    echo "postinst called with unknown argument \`$1'" >&2
	    exit 1
	    ;;
esac

#DEBHELPER#

echo ""
echo "*** Installation complete"
echo "*** Please run sudo cloud-install to configure your cloud."
echo ""

exit 0
