#!/bin/bash
# postinst for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule
db_version 2.0

db_capb backup

popState()
{
	if [ -n "$STATES" ]; then
		STATE=${STATES##* }
		STATES=${STATES% *}
	else
		STATE=""
	fi
}

pushState()
{
	STATES="$STATES $1"
}

validateCIDR()
{
    addr=$1
    # validate openstack-vmnetwork has a valid CIDR
    # broken up into segments for easier readability
    # first let's match that it starts with an number between 1-254
    pattern="^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\."
    # this part validates next segment of numbers between 1-254
    pattern="${pattern}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\."
    # this part validates next segment of numbers between 1-254
    pattern="${pattern}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])\."
    # this part validates next segment of numbers between 1-254
    pattern="${pattern}(0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-4])"
    # this part validates that it ends in /NN
    pattern="${pattern}/[0-9]{2}$"

    if [[ ${addr} =~ $pattern ]]; then
	return 0
    else
	return 1
    fi
}

getInterfaces()
{
	ifconfig -s|egrep -v 'Iface|lo'|egrep -o '^[a-zA-Z0-9]+'|paste -sd ","
}

STATE=1
case "$1" in
    configure)
	while [ -n "$STATE" -a "$STATE" != 34 ]; do
	    NEXT_STATE=$((STATE + 1))
	    case "$STATE" in
		1)
		    db_subst cloud-install/install-interface "$(getInterfaces)"
		    echo $(getInterfaces)
		    db_input high cloud-install/install-interface || true
		    NEXT_STATE=2
		    ;;
		2)
		    db_input high cloud-install/dhcp-range || true
		    NEXT_STATE=3
		    ;;
		3)
		    db_input high cloud-install/openstack-admin-password || true
		    db_input high cloud-install/openstack-admin-password-again || true
		    ;;
		4)
		    # Validate openstack password match
		    db_get cloud-install/openstack-admin-password
		    ADMIN_PW="$RET"
		    db_get cloud-install/openstack-admin-password-again
		    if [ "$ADMIN_PW" != "$RET" ]; then
			db_input critical cloud-install/password-mismatch
			NEXT_STATE=3
		    fi
		    ;;

		5)
		    db_input high cloud-install/openstack-vmnetwork || true
		    ;;
		5)
		    db_get cloud-install/openstack-vmnetwork
		    # validateCIDR "$RET"
		    # RET=$?
		    # if [ "$RET" -ne 0 ]; then
		    #     db_input critical cloud-install/valid-cidr
		    #     NEXT_STATE=32
		    # fi
		    ;;
	    esac

	    if db_go; then
		pushState "$STATE"
		STATE=$NEXT_STATE
	    else
		popState
	    fi
	done

	if [ -z "$STATE" ]; then
	    exit 0
	fi

	# Store openstack credentials
	db_get cloud-install/openstack-admin-password
	printf "%s\n" "$RET" > /etc/openstack.passwd; chmod 0600 /etc/openstack.passwd
	db_set maas/installation-note ""; db_fset maas/installation-note seen true
	db_set cloud-install/install-type "Multi-system"
	# Set our install user
	db_set cloud-install/install-user $(getent passwd 1000|cut -d: -f1)
	;;
    abort-upgrade|abort-remove|abort-deconfigure)
	;;
    *)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

echo ""
echo "*** Installation complete"
echo "*** Please run sudo cloud-install to configure your cloud."
echo ""

exit 0
